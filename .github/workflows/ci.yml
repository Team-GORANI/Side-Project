name: CI/CD Pipeline

on:
  push:
    branches: [ main, deployment ]
  pull_request:
    branches: [ main, deployment ]

env:
  IS_ACT: ${{ vars.ACT == 'true' }}

jobs:
  backend-validate:
    name: Validate Backend
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: ./app
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.9"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # GCP 인증은 실제 GitHub Actions에서만 실행
      - id: 'auth'
        if: env.IS_ACT != 'true'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: 'Set up Cloud SDK'
        if: env.IS_ACT != 'true'
        uses: 'google-github-actions/setup-gcloud@v1'
        with:
          project_id: '${{ secrets.GCP_PROJECT_ID }}'

      - name: Install Poetry (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry==1.7.1
        shell: pwsh

      - name: Install Poetry (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry==1.7.1

      - name: Configure Poetry
        run: |
          poetry config virtualenvs.create false
          poetry config installer.max-workers 10

      - name: Install dependencies
        run: |
          poetry install --no-interaction --no-root
        env:
          PYTHON_KEYRING_BACKEND: keyring.backends.null.Keyring

      - name: Build Docker image (local)
        if: env.IS_ACT == 'true'
        run: docker build . -t backend:local

      - name: Build and Push Docker image (GitHub Actions)
        if: env.IS_ACT != 'true'
        run: |
          gcloud auth configure-docker
          docker build -t gcr.io/$